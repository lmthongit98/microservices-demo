server.port = 8082
spring.datasource.url=jdbc:mysql://localhost:3306/orderservice?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456

# hibernate properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true

#oauth client
server.oauth2.token.url=http://localhost:9000/oauth/token

client.notification.client.id=order_service
client.notification.client.secret=123
client.notification.client.scopes=notification,read

#kafka server url
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

#0: no wait for kafka response
#1: leader write success, not wait for follower
#-1: wait for all leader, and replication
spring.kafka.producer.acks=-1 
spring.kafka.producer.retries=1 
#spring.kafka.producer.properties.[request.timeout.ms]=1

#prevent duplicate send
spring.kafka.producer.properties.[enable.idempotence]=true
spring.kafka.producer.properties.[max.in.flight.requests.per.connection]=5

notification.topic=notification-topic