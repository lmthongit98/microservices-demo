server.port=9081

spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.url=jdbc:mysql://mysqldb:3306/authservice?createDatabaseIfNotExist=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#oauth client
server.oauth2.token.url=http://auth-service:9000/oauth/token

client.notification.client.id=user_service
client.notification.client.secret=123
client.notification.client.scopes=notification

#kafka server url
spring.kafka.bootstrap-servers=broker:29092

spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

#0: no wait for kafka response
#1: leader write success, not wait for follower
#-1: wait for all leader, and replication
spring.kafka.producer.acks=-1 
spring.kafka.producer.retries=1 
#spring.kafka.producer.properties.[request.timeout.ms]=1

#prevent duplicate send
spring.kafka.producer.properties.[enable.idempotence]=true
spring.kafka.producer.properties.[max.in.flight.requests.per.connection]=5

notification.topic=notification-topic

