version: '3'
services:
  config-service:
    container_name: config-service
    build:
      context: config-service
      dockerfile: Dockerfile
    image: config-service:1.0
    restart: on-failure
    ports:
      - "8888:8888"

  discovery-service:
    container_name: discovery-service
    build:
      context: discovery-service
      dockerfile: Dockerfile
    image: discovery-service:1.0
    restart: on-failure
    ports:
      - "9999:9999"
    depends_on:
      - config-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  monitor-admin:
    container_name: monitor-admin
    build:
      context: monitor-admin
      dockerfile: Dockerfile
    image: monitor-admin:1.0
    restart: on-failure
    ports:
      - "9001:9001"
    depends_on:
      - config-service
      - discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  gateway-service:
    container_name: gateway-service
    build:
      context: gateway-service
      dockerfile: Dockerfile
    image: gateway-service:1.0
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - config-service
      - discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  auth-service:
    container_name: auth-service
    build:
      context: auth-service
      dockerfile: Dockerfile
    image: auth-service:1.0
    restart: on-failure
    ports:
      - "9000:9000"
    depends_on:
      - mysqldb
      - config-service
      - discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  inventory-service:
    container_name: inventory-service
    build:
      context: inventory-service
      dockerfile: Dockerfile
    image: inventory-service:1.0
    restart: on-failure
    ports:
      - "8083:8083"
    depends_on:
      - zipkin
      - mysqldb
      - config-service
      - discovery-service
      - auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  notification-service:
    container_name: notification-service
    build:
      context: notification-service
      dockerfile: Dockerfile
    image: notification-service:1.0
    restart: on-failure
    ports:
      - "9083:9083"
    depends_on:
      - zipkin
      - zookeeper
      - mysqldb
      - config-service
      - discovery-service
      - auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  order-service:
    container_name: order-service
    build:
      context: order-service
      dockerfile: Dockerfile
    image: order-service:1.0
    restart: on-failure
    ports:
      - "8082:8082"
    depends_on:
      - zipkin
      - zookeeper
      - mysqldb
      - config-service
      - discovery-service
      - auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  product-service:
    container_name: product-service
    build:
      context: product-service
      dockerfile: Dockerfile
    image: product-service:1.0
    restart: on-failure
    ports:
      - "8081:8081"
    depends_on:
      - zipkin
      - zookeeper
      - mysqldb
      - config-service
      - discovery-service
      - auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  user-service:
    container_name: user-service
    build:
      context: user-service
      dockerfile: Dockerfile
    image: user-service:1.0
    restart: on-failure
    ports:
      - "9081:9081"
    depends_on:
      - zipkin
      - zookeeper
      - mysqldb
      - config-service
      - discovery-service
      - auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  mysqldb:
    container_name: mysqldb
    image: mysql:8.0.29
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - "3306:3306"
    volumes:
      - my-datavolume:/var/lib/mysql

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
volumes:
  my-datavolume: